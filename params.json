{"name":"Othm-symbols","tagline":"Implements basic symbolic programming for C (using othm)","body":"## Othm Symbols\r\n*A header only library for keeping things simple*\r\n### What are symbols (and why do I want to use them?)\r\nSymbols are (often) pointers (in this case of type struct othm_symbol_struct *) that have symbolic meaning making them useful for constants. In this case they also inherit from struct othm_request making them ideal for being used as hashmap keys.\r\n### Installation\r\n     make install\r\n### How to use\r\nInclude the header:\r\n\r\n```C\r\n#include <othm_symbols.h>\r\n```\r\nAdd a new symbol (outside of a function, since symbols should be global):\r\n\r\n```C\r\n#ifndef OTHM_SYMBOL_SYMBOL_my_symbol\r\n#define OTHM_SYMBOL_SYMBOL_my_symbol\r\nOTHM_SYMBOL_INIT(my_symbol);\r\n#endif\r\n```\r\nOr if you prefer a keyword symbol:\r\n\r\n```C\r\n#ifndef OTHM_SYMBOL_KEYWORD_my_keyword\r\n#define OTHM_SYMBOL_KEYWORD_my_keyword\r\nOTHM_KEYWORD_INIT(my_keyword);\r\n#endif\r\n```\r\nYou can compare (keyword/symbol/any symbol type) symbols:\r\n\r\n```C\r\nOTHM_SYMBOL(my_symbol) == OTHM_SYMBOL(my_symbol);  /* ==> 1 */\r\nOTHM_KEYWORD(my_symbol) == OTHM_SYMBOL(my_symbol); /* ==> 0 */\r\n```\r\nYou can get their names (char *):\r\n\r\n```C\r\nOTHM_KEYWORD_NAME(my_keyword)\r\n```\r\nYou can print them out in a lisp inspired fashion:\r\n\r\n```C\r\nothm_symbol_print(OTHM_SYMBOL(my_symbol));   /* ==> 'my_symbol  */\r\nothm_symbol_print(OTHM_KEYWORD(my_keyword)); /* ==> :my_keyword */\r\n```\r\nSymbols can added to a global hashmap making them accessible at run time:\r\n\r\n```C\r\nint main(void)\r\n{\r\nothm_symbols_init_runtime();\r\nOTHM_SYMBOL_ALLOW_AT_RUNTIME(hi);\r\nOTHM_KEYWORD_ALLOW_AT_RUNTIME(bye);\r\nif (othm_symbol_get_from_string(\"hi\") == OTHM_SYMBOL(hi))\r\n        othm_symbol_print(othm_keyword_get_from_string(\"bye\"));\r\n}\r\n```\r\n### Authors and Contributors\r\nUladox (@Uladox) :bowtie:.\r\n\r\n### Support or Contact\r\nEmail me at othmorg@gmail.com\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}